scalar Date

type Query {
  user: User
  brokers(limit: Int): [Broker]
  broker(id: ID!): Broker
  investments(limit: Int): [Investment]
  investment(id: ID!): Investment
  balanceUpdates(limit: Int): [BalanceUpdate]
  projections: [Projection]
  historyBalances: [HistoryBalance]
}

type User {
  id: ID!
  displayName: String!
  photo: String
}

type Broker {
  id: ID!
  name: String!
  investments: [Investment]
}

type Investment {
  id: ID!
  name: String!
  broker: Broker
  balanceUpdates(limit: Int, order: [[String]]): [BalanceUpdate]
  deposits: [Deposit]
  withdrawals: [Withdrawal]
}

type BalanceUpdate {
  id: ID!
  amount: Float!
  date: Date!
}

type Deposit {
  id: ID!
  amount: Float!
  date: Date!
}

type Withdrawal {
  id: ID!
  amount: Float!
  date: Date!
}

type Projection {
  amount: Float!
  date: Date!
}

type HistoryBalance {
  amount: Float!
  date: Date!
}
